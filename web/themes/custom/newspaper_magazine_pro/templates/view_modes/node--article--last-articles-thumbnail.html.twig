{#
/**
 * @file
 * bartik's theme implementation to display a node.
 *
 * available variables:
 * - node: the node entity with limited access to object properties and methods.
 *   only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. for example:
 *   - node.getcreatedtime() will return the node creation timestamp.
 *   - node.hasfield('field_example') returns true if the node bundle includes
 *     field_example. (this does not indicate the presence of a value in this
 *     field.)
 *   - node.ispublished() will return whether the node is published or not.
 *   calling other methods, such as node.delete(), will result in an exception.
 *   see \drupal\node\entity\node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) the title of the node.
 * - content: all node items. use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: the node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: metadata for this node.
 * - date: (optional) themed creation date field.
 * - author_name: (optional) themed author name field.
 * - url: direct url of the current node.
 * - display_submitted: whether submission information should be displayed.
 * - attributes: html attributes for the containing element.
 *   the attributes.class element may contain one or more of the following
 *   classes:
 *   - node: the current template type (also known as a "theming hook").
 *   - node--type-[type]: the current node type. for example, if the node is an
 *     "article" it would result in "node--type-article". note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: the view mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   the following are controlled through the node publishing options.
 *   - node--promoted: appears on nodes promoted to the front page.
 *   - node--sticky: appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: view mode; for example, "teaser" or "full".
 * - teaser: flag for the teaser state. will be true if view_mode is 'teaser'.
 * - page: flag for the full page state. will be true if view_mode is 'full'.
 * - readmore: flag for more state. will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: flag for authenticated user status. will be true when the
 *   current user is a logged-in member.
 * - is_admin: flag for admin user status. will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.ispromoted() ? 'node--promoted',
    node.issticky() ? 'node--sticky',
    not node.ispublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
{{ attach_library('bartik/classy.node') }}
<article{{ attributes.addclass(classes) }}>
  <div{{ content_attributes.addclass('node__content', 'clearfix') }}>
    <div class="latest-articles">
      <div class="latest-articles__image">
        {{ content.field_preview_image }}
      </div>
      <div class="latest-articles__data">
        <div class="latest-articles__category">
          {% if content.field_category[0] %}
            {{ content.field_category[0] }}
          {% endif %}
        </div>
        <div class="latest-articles__title">
          <header>
            {{ title_prefix }}
            {% if label and not page %}
              <h2{{ title_attributes.addclass('node__title') }}>
              <a href="{{ url }}" rel="bookmark">{{ label }}</a>
             </h2>
            {% endif %}
            {{ title_suffix }}
           </header>
        </div>
        <div class="latest-articles__meta">
          {% if display_submitted %}
            <span{{ author_attributes }}>
              {% trans %}
                <span class="author">
                  {{ author_name }}
                </span> - {{ date }}
              {% endtrans %}
            </span>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</article>
